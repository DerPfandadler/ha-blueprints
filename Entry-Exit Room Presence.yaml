blueprint:
  name: Room Presence with Area Light Control
  description: >
    Monitors esphome entry/exit events for a designated area.
    Turns lights and additional entities on when someone enters and off when the room is empty.
  domain: automation
  mode: queued
  max: 10

  input:
    area:
      name: Room Area
      description: "The area to monitor for presence detection and control its lights."
      selector:
        area: {}
    counter_entity:
      name: Counter Entity
      description: "Counter entity tracking the number of people in the area."
      selector:
        entity:
          domain: counter
    presence_entity:
      name: Presence Input Boolean
      description: "Input boolean that represents the occupancy status of the area."
      selector:
        entity:
          domain: input_boolean
    additional_entities:
      name: Additional Entities to Toggle
      description: "Select extra entities (e.g., fans, switches, air purifiers) that should turn on/off with the lights."
      default: []
      selector:
        entity:
          multiple: true
          filter:
            domain:
              - switch
              - fan
              - climate  # ✅ Now supports extra entity types

trigger:
  - platform: event
    event_type: esphome.entry_detected
  - platform: event
    event_type: esphome.exit_detected

variables:
  monitored_area: !input area
  counter: !input counter_entity
  presence: !input presence_entity
  extra_entities: !input additional_entities

condition:
  # Ensure the event's room matches the selected area name
  - condition: template
    value_template: "{{ trigger.event.data.room == monitored_area }}"

action:
  - choose:
      # When a person enters the room
      - conditions:
          - condition: template
            value_template: "{{ trigger.event.event_type == 'esphome.entry_detected' }}"
        sequence:
          - service: counter.increment
            target:
              entity_id: "{{ counter }}"
          - service: input_boolean.turn_on
            target:
              entity_id: "{{ presence }}"
          - service: light.turn_on
            target:
              area_id: !input area  # ✅ Turns on lights in the area
          - choose:  # ✅ Only toggle extra entities if any were selected
              - conditions:
                  - condition: template
                    value_template: "{{ extra_entities | count > 0 }}"
                sequence:
                  - service: homeassistant.turn_on
                    target:
                      entity_id: "{{ extra_entities }}"

      # When a person exits the room
      - conditions:
          - condition: template
            value_template: "{{ trigger.event.event_type == 'esphome.exit_detected' }}"
        sequence:
          - service: counter.decrement
            target:
              entity_id: "{{ counter }}"
          - delay: "00:00:01"
          - condition: template
            value_template: "{{ states(counter) | int <= 0 }}"
          - service: input_boolean.turn_off
            target:
              entity_id: "{{ presence }}"
          - service: light.turn_off  # ✅ Turns off lights in the area
            target:
              area_id: !input area
          - choose:  # ✅ Only toggle extra entities if any were selected
              - conditions:
                  - condition: template
                    value_template: "{{ extra_entities | count > 0 }}"
                sequence:
                  - service: homeassistant.turn_off
                    target:
                      entity_id: "{{ extra_entities }}"